// parser and compiler test for partial
// record type unwrapping

io mod = use "std/io.lim";

type foo = record {
    bar u32;
};

fn foo'(x u32) !foo = {
    if x == 0 {
        return error;
    } else {
        return foo { bar = x };
    };
};

pub fn main() void = io {
    let r = foo'(1);
    if r!.bar == 1 {
        io::println("test 1 ok")!;
    } else {
        io::println("test 1 fail")!;
    };

    let r' = foo'(0)! or io::println("test 2 ok")!;
    if r'.bar == 0 {
        io::println("test 3 ok")!;
    } else {
        io::println("test 3 fail")!;
    };
};
